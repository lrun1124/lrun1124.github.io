---
layout:     post
title:      "Summary"
subtitle:   ""
date:       2019-10-07 12:00:00
author:     "Run"
header-img: "img/ArrayUnique-bg.jpg"
tags:
    - JavaScript
---

> “Move on. ”

### JS
#### 1. JS基本数据类型及存储结构
#### 2. null, undefined区d别
#### 3. JS原型，原型链
#### 4. JS作用域，作用域链
#### 5. 闭包
#### 6. 请简述`JavaScript`中的`this`。

JS 中的`this`是一个相对复杂的概念，不是简单几句能解释清楚的。粗略地讲，函数的调用方式决定了`this`的值。我阅读了网上很多关于`this`的文章，[Arnav Aggrawal](https://medium.com/@arnav_aggarwal) 写的比较清楚。`this`取值符合以下规则：

1. 在调用函数时使用`new`关键字，函数内的`this`是一个全新的对象。
1. 如果`apply`、`call`或`bind`方法用于调用、创建一个函数，函数内的 this 就是作为参数传入这些方法的对象。
1. 当函数作为对象里的方法被调用时，函数内的`this`是调用该函数的对象。比如当`obj.method()`被调用时，函数内的 this 将绑定到`obj`对象。
1. 如果调用函数不符合上述规则，那么`this`的值指向全局对象（global object）。浏览器环境下`this`的值指向`window`对象，但是在严格模式下(`'use strict'`)，`this`的值为`undefined`。
1. 如果符合上述多个规则，则较高的规则（1 号最高，4 号最低）将决定`this`的值。
1. 如果该函数是 ES2015 中的箭头函数，将忽略上面的所有规则，`this`被设置为它被创建时的上下文。

#### 7. New的过程
#### 8. 不会查找原型的函数
#### 9. for in和for of
#### 10. Ajax流程，手动写，Ajax缓存
#### 11. 延迟加载，defer，async，动态dom，分组加载
#### 12. get和post
#### 13. 同步和异步
#### 14. 跨域问题
#### 15. 前端模块化，AMD/CMD
#### 16. 内存泄漏
#### 17. ==, ===, Object.is()区别
#### 18. 前端设计模式，单例，单体，工厂，策略，装饰者，适配器，观察者，门面
#### 19. 优雅降级和渐进增强
#### 20. Node的优缺点
#### 21. GC，v8 GC机制
#### 22. Cookie和Session
#### 23. javascript继承的6种方法
#### 24. MVC和MVVM的理解
#### 25. 



### html
#### 1. 事件冒泡和捕获
#### 2. window对象和document对象
#### 3. 页面编码和被请求的资源编码如果不一致
#### 4. DOM操作
#### 5. 把 Script 标签 放在页面的最底部的body封闭之前 和封闭之后有什么区别？
#### 6. 给一个dom同时绑定两个点击事件，一个用捕获，一个用冒泡。会执行几次事件？
#### 7. http状态码
#### 8. Doctype作用
#### 9. 标准模式与兼容模式有什么区别
#### 10. HTML5 为什么只需要写 <!DOCTYPE HTML>
#### 11. 行内元素有哪些？块级元素有哪些？ 空(void)元素有那些？
#### 12. 使用link和@import区别
#### 13. 浏览器内核的理解
#### 14. 常见的浏览器内核
#### 15. html5有哪些新特性？如何处理HTML5新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？
#### 16. XML,SGML,HTML,XHTML,HTML5
#### 17. HTML语义化
#### 18. cookie, loaclStorage, sessionStorage
#### 19. 浏览器是怎么对HTML5的离线储存资源进行管理和加载的呢？
#### 20. iframe缺点
#### 21. Label的作用是什么？是怎么用的？
#### 22. title与h1的区别、b与strong的区别、i与em的区别？
#### 23. 如何实现浏览器内多个标签页之间的通信?
#### 24. JavaScript是采用值传递还是引用传递的，并解释一下原理


### css
#### 1. CSS的盒子模型，低版本IE的盒子模型有什么不同的
#### 2. CSS选择器
#### 3. display的值及作用
#### 4. position属性（定位原点）
#### 5. 居中div, 水平居中，水平垂直居中
#### 6. Flexbox
#### 7. 用纯css创建三角形
#### 8. 清除浮动
#### 9. CSS优化、提高性能的方式
#### 10. 

### 性能优化
#### 1. 一个页面从输入 URL 到页面加载显示完成，这个过程中都发生了什么？
#### 2. 性能优化策略, 核心，html层面布局， request, css, 服务器端, JS

### other
#### 1. 对称/非对称加密，公钥和私钥
#### 2. XML和JSON的区别？
#### 3. JSON了解
#### 4. Web安全及防护原理, sql注入, XSS, csrf

### code


